name: Container Build and Push

on:
  workflow_call:
    inputs:
      registry:
        description: "What container registry to push to"
        required: false
        type: string
        default: ghcr.io
      image:
        description: "Name of container image"
        required: false
        type: string
        default: ${{ github.repository }}
      context:
        description: "Path to build context"
        required: false
        type: string
        default: .
      file:
        description: "Name of the file to build"
        required: false
        type: string
        default: Dockerfile
      runners:
        description: "Runners to use"
        required: false
        type: string
        default: "['ubuntu-latest']"
      tags:
        description: "Tags to build"
        required: false
        type: string
        default: |
          type=schedule
          type=ref,event=branch
          type=ref,event=tag
          type=raw,value=latest,enable={{is_default_branch}}
    

jobs:
  container-image-release:
    name: Make container image release
    runs-on: ${{ fromJson(inputs.runners) }}
    timeout-minutes: 15

    steps:
      - name: Check out repo 
        uses: actions/checkout@v3

      - name: Create the image tags
        id: image-tag
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.registry }}/${{ inputs.image }}
          tags: ${{ inputs.tags }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.file }}
          push: true
          provenance: false
          labels: ${{ steps.image-tag.outputs.labels }}
          tags: "${{ steps.image-tag.outputs.tags }}"

